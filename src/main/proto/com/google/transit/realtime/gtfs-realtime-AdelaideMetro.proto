// Copyright 2015 The GTFS Specifications Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protocol definition file for GTFS Realtime.
//
// GTFS Realtime lets transit agencies provide consumers with realtime
// information about disruptions to their service (stations closed, lines not
// operating, important delays etc), location of their vehicles and expected
// arrival times.
//
// Standard protocol is published at:
// https://github.com/google/transit/tree/master/gtfs-realtime
// DPTI protocol is published at 
// https://gtfs.adelaidemetro.com.au/index.html#/gtfs/download_proto

syntax = "proto2";

import "com/google/transit/realtime/gtfs-realtime.proto";

option java_package = "com.google.transit.realtime";
package transit_realtime;

// The contents of a feed message.
// A feed is a continuous stream of feed messages. Each message in the stream is
// obtained as a response to an appropriate HTTP GET request.
// A realtime feed is always defined with relation to an existing GTFS feed.
// All the entity ids are resolved with respect to the GTFS feed.
// Note that "required" and "optional" as stated in this file refer to Protocol
// Buffer cardinality, not semantic cardinality.  See reference.md at
// https://github.com/google/transit/tree/master/gtfs-realtime for field
// semantic cardinality.

message TfnswVehicleDescriptor {
  optional bool air_conditioned = 1 [default = true];
    // Indicates the availability of air-conditioning on this vehicle, Default is true because the whole fleet is air-conditioned. 

  optional int32 wheelchair_accessible = 2 [default = 0];
  // Indicates whether the vehicle is wheelchair accessible or not. It returns 1 if the vehicle is accessible otherwise returns 0
}
extend transit_realtime.VehicleDescriptor {
  optional TfnswVehicleDescriptor tfnsw_vehicle_descriptor = 1999;
  // Assumes the TfNSW extension number will be 1999 to keep it consistent with NSW
}
